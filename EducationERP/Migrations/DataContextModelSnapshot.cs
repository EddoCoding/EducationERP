// <auto-generated />
using System;
using EducationERP.Common.Components;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EducationERP.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EducationERP.Models.EducationalDirectionTraining", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DirectionCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DirectionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("EducationalLevelPreparationId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EducationalLevelPreparationId");

                    b.ToTable("SettingDirections");
                });

            modelBuilder.Entity("EducationERP.Models.EducationalLevelPreparation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SettingLevels");
                });

            modelBuilder.Entity("EducationERP.Models.Modules.Administration.EducationalFormOfTraining", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EducationalProfileId")
                        .HasColumnType("uuid");

                    b.Property<string>("FormName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EducationalProfileId");

                    b.ToTable("SettingForms");
                });

            modelBuilder.Entity("EducationERP.Models.Modules.Administration.EducationalProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EducationalDirectionTrainingId")
                        .HasColumnType("uuid");

                    b.Property<string>("ProfileCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EducationalDirectionTrainingId");

                    b.ToTable("SettingProfiles");
                });

            modelBuilder.Entity("EducationERP.Models.Modules.Administration.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("ModuleAdministration")
                        .HasColumnType("boolean");

                    b.Property<bool?>("ModuleAdmissionsCampaign")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EducationERP.Models.EducationalDirectionTraining", b =>
                {
                    b.HasOne("EducationERP.Models.EducationalLevelPreparation", "EducationalLevelPreparation")
                        .WithMany("DirectionsTraining")
                        .HasForeignKey("EducationalLevelPreparationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationalLevelPreparation");
                });

            modelBuilder.Entity("EducationERP.Models.Modules.Administration.EducationalFormOfTraining", b =>
                {
                    b.HasOne("EducationERP.Models.Modules.Administration.EducationalProfile", "EducationalProfile")
                        .WithMany("FormsOfTraining")
                        .HasForeignKey("EducationalProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationalProfile");
                });

            modelBuilder.Entity("EducationERP.Models.Modules.Administration.EducationalProfile", b =>
                {
                    b.HasOne("EducationERP.Models.EducationalDirectionTraining", "EducationalDirectionTraining")
                        .WithMany("EducationalProfiles")
                        .HasForeignKey("EducationalDirectionTrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationalDirectionTraining");
                });

            modelBuilder.Entity("EducationERP.Models.EducationalDirectionTraining", b =>
                {
                    b.Navigation("EducationalProfiles");
                });

            modelBuilder.Entity("EducationERP.Models.EducationalLevelPreparation", b =>
                {
                    b.Navigation("DirectionsTraining");
                });

            modelBuilder.Entity("EducationERP.Models.Modules.Administration.EducationalProfile", b =>
                {
                    b.Navigation("FormsOfTraining");
                });
#pragma warning restore 612, 618
        }
    }
}
